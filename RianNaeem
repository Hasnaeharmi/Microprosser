#include <xc.h>
#include <stdint.h>

// CONFIG
#pragma config FOSC = HS        
#pragma config WDTE = OFF       
#pragma config PWRTE = ON       
#pragma config BOREN = ON       
#pragma config LVP = OFF        
#pragma config CPD = OFF        
#pragma config WRT = OFF        
#pragma config CP = OFF         

#define _XTAL_FREQ 4000000

// Pins
#define DHT11_PIN PORTAbits.RA1
#define DHT11_DIR TRISAbits.TRISA1
#define LED       PORTDbits.RD6
#define BUZZER    PORTDbits.RD7

#define LCDPORT PORTB
#define RS PORTBbits.RB0
#define RW PORTBbits.RB1
#define E  PORTBbits.RB2

#define FIRST_LINE  0x80
#define SECOND_LINE 0xC0
#define ALERT_TEMP  25  // ? Alert threshold for both LED and Buzzer

// Globals
uint8_t temperature, humidity;
uint8_t checksum_error = 0;
uint8_t timeout_flag = 0;
unsigned char status = 0;

// ========== LCD FUNCTIONS ==========
void lcd_delay(unsigned int t) {
    while (t--) __delay_us(100);
}

void lcd_init_write(unsigned char a) {
    RS = 0; RW = 0;
    LCDPORT = a;
    E = 1; lcd_delay(3);
    E = 0;
}

void lcd_com(unsigned char a) {
    unsigned char temp;
    if (status) {
        status = 0;
        goto next;
    }
    RS = 0;
next:
    RW = 0;
    temp = a & 0xF0;
    LCDPORT &= 0x0F;
    LCDPORT |= temp;
    E = 1; lcd_delay(1); E = 0;
    temp = (a << 4) & 0xF0;
    LCDPORT &= 0x0F;
    LCDPORT |= temp;
    E = 1; lcd_delay(1); E = 0;
}

void lcd_data(unsigned char a) {
    status = 1; RS = 1;
    lcd_com(a);
}

void lcd_puts(char *str) {
    while (*str) lcd_data(*str++);
}

void lcd_init(void) {
    lcd_delay(15);
    lcd_init_write(0x30); lcd_delay(5);
    lcd_init_write(0x30); lcd_delay(5);
    lcd_init_write(0x30); lcd_delay(5);
    lcd_init_write(0x20); lcd_delay(5);
    lcd_com(0x28);
    lcd_com(0x0C);
    lcd_com(0x06);
    lcd_com(0x01);
    lcd_delay(5);
}

void clear_screen(void) {
    lcd_com(FIRST_LINE); lcd_puts("                ");
    lcd_com(SECOND_LINE); lcd_puts("                ");
}

// ========== DHT11 FUNCTION ==========
uint8_t read_dht11(void) {
    uint8_t data[5] = {0};
    uint8_t i, j;

    checksum_error = 0;
    timeout_flag = 0;

    // Start signal
    TRISAbits.TRISA1 = 0;        // RA1 as output
    PORTAbits.RA1 = 0;           // Pull RA1 low
    __delay_ms(18);              // Keep it low for 18ms
    PORTAbits.RA1 = 1;           // Pull RA1 high
    __delay_us(30);              // Wait 30us
    TRISAbits.TRISA1 = 1;        // Switch to input

    // Wait for DHT response: LOW (80us), then HIGH (80us)
    for (i = 0; i < 1000 && PORTAbits.RA1; i++) __delay_us(1);
    if (i >= 1000) { timeout_flag = 1; return 0; }

    for (i = 0; i < 1000 && !PORTAbits.RA1; i++) __delay_us(1);
    if (i >= 1000) { timeout_flag = 1; return 0; }

    for (i = 0; i < 1000 && PORTAbits.RA1; i++) __delay_us(1);
    if (i >= 1000) { timeout_flag = 1; return 0; }

    // Read 5 bytes
    for (i = 0; i < 5; i++) {
        for (j = 0; j < 8; j++) {
            while (!PORTAbits.RA1);       // Wait for signal to go high
            __delay_us(30);               // Wait 30us

            if (PORTAbits.RA1)            // If still high after 30us, it's a 1
                data[i] |= (1 << (7 - j));

            while (PORTAbits.RA1);        // Wait for signal to go low
        }
    }

    // Verify checksum
    if (data[4] != (data[0] + data[1] + data[2] + data[3])) {
        checksum_error = 1;
        return 0;
    }

    humidity = data[0];
    temperature = data[2];
    return 1;
}

// ========== UI ==========
void display_results(void) {
    char t[16] = "Temp: 00 C";
    char h[16] = "Humidity: 0%";

    t[6] = (temperature / 10) + '0';
    t[7] = (temperature % 10) + '0';
    t[8] = 0xDF;

    h[10] = (humidity / 10) + '0';
    h[11] = (humidity % 10) + '0';

    lcd_com(FIRST_LINE); lcd_puts(t);
    lcd_com(SECOND_LINE); lcd_puts(h);
}

void display_error(const char *line1, const char *line2) {
    clear_screen();
    lcd_com(FIRST_LINE); lcd_puts(line1);
    lcd_com(SECOND_LINE); lcd_puts(line2);
}

void check_temperature_alerts(void) {
    if (temperature >= ALERT_TEMP) {
        LED = 1;
        BUZZER = 1;
    } else {
        LED = 0;
        BUZZER = 0;
    }
}

void intro_screen(void) {
    lcd_com(FIRST_LINE); lcd_puts("GROUP 57");
    lcd_com(SECOND_LINE); lcd_puts("HASNA RIAN");
    __delay_ms(2000);
    clear_screen();
}

void system_init(void) {
    TRISB = 0x00; // LCD
    TRISD &= ~(1 << 6);   // LED
    TRISD &= ~(1 << 7);   // Buzzer
    TRISAbits.TRISA1 = 1; // RA1 as input (initial state)
    ADCON1 = 0x06;        // Turn off analog on PORTA
    PORTAbits.RA1 = 1;    // Make sure pin is high (pull-up effect)
    LED = 0;
    BUZZER = 0;
    lcd_init();
    clear_screen();
}

// ========== MAIN ==========
void main(void) {
    system_init();
    intro_screen();

    while (1) {
        __delay_ms(2000);
        if (read_dht11()) {
            display_results();
            check_temperature_alerts();
        } else {
            LED = 0;
            BUZZER = 0;
            if (timeout_flag)
                display_error("Timeout Error", "Check Sensor");
            else if (checksum_error)
                display_error("Checksum Error", "Bad Data");
            else
                display_error("Unknown Error", "Try Again");
 }
